//Generated by ridlc
//Your task is to implement the following classes
//to get your rpc server work
#pragma once
#include "StressTest.h"

class CStressSvc_SvrImpl
    : public CStressSvc_SvrSkel
{
    public:
    typedef CStressSvc_SvrSkel super;
    CStressSvc_SvrImpl( const IConfigDb* pCfg ) :
        super::virtbase( pCfg ), super( pCfg )
    {}

    /* The following two methods are important for */
    /* streaming transfer. rewrite them if necessary */
    gint32 OnStreamReady( HANDLE hChannel ) override
    { return super::OnStreamReady( hChannel ); } 
    
    gint32 OnStmClosing( HANDLE hChannel ) override
    { return super::OnStmClosing( hChannel ); }
    
    // IEchoThings
    virtual gint32 Echo(
        const std::string& strText /*[ In ]*/,
        std::string& strResp /*[ Out ]*/ );
    
    virtual gint32 EchoUnknown(
        BufPtr& pBuf /*[ In ]*/,
        BufPtr& pResp /*[ Out ]*/ );
    
    virtual gint32 Ping(
        const std::string& strCount /*[ In ]*/ );
    
};

